{
    "questions": [
        {
            "id": 1,
            "name": "FizzBuzz",
            "description": "Write a program that prints the numbers from 1 to 100. But for multiples of three print \"Fizz\" instead of the number and for the multiples of five print \"Buzz\". For numbers which are multiples of both three and five print \"FizzBuzz\".",
            "tests": [
                {
                    "input": 3,
                    "output": "Fizz"
                },
                {
                    "input": 5,
                    "output": "Buzz"
                },
                {
                    "input": 15,
                    "output": "FizzBuzz"
                },
                {
                    "input": 1,
                    "output": "1"
                },
                {
                    "input": 30,
                    "output": "FizzBuzz"
                }
            ]
        },
        {
            "id": 2,
            "name": "Palindrome",
            "description": "Write a function to check if a given string is a palindrome, which is a word, phrase, number or other sequence of characters that reads the same backward as forward ignoring spaces, punctuation and capitalization. For example, \"madam\" is a palindrome.",
            "tests": [
                {
                    "input": "racecar",
                    "output": true
                },
                {
                    "input": "A man a plan a canal Panama",
                    "output": true
                },
                {
                    "input": "hello",
                    "output": false
                },
                {
                    "input": "12321",
                    "output": true
                },
                {
                    "input": "Madam, I'm Adam",
                    "output": true
                }
            ]

        },
        {
            "id": 3,
            "name": "Two Sum",
            "description": "Given an array of integers, return indices of the two numbers such that they add up to a specific target. You may assume that each input would have exactly one solution, and you may not use the same element twice.",
            "tests": [
                {
                    "input": [2, 7, 11, 15],
                    "target": 9,
                    "output": [0, 1]
                },
                {
                    "input": [3, 2, 4],
                    "target": 6,
                    "output": [1, 2]
                },
                {
                    "input": [3, 3],
                    "target": 6,
                    "output": [0, 1]
                }
            ]
        },
        {
            "id": 4,
            "name": "Reverse Integer",
            "description": " Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.",
            "tests": [
                {
                    "input": 123,
                    "output": 321
                },
                {
                    "input": -123,
                    "output": -321
                },
                {
                    "input": 120,
                    "output": 21
                },
                {
                    "input": 0,
                    "output": 0
                },
                {
                    "input": 2147483647,
                    "output": 0
                }
            ]
        },
        {
            "id": 5,
            "name": "Roman to Integer",
            "description": "Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.",
            "tests": [
                {
                    "input": "III",
                    "output": 3
                },
                {
                    "input": "IV",
                    "output": 4
                },
                {
                    "input": "IX",
                    "output": 9
                },
                {
                    "input": "LVIII",
                    "output": 58
                },
                {
                    "input": "1250",
                    "output": "MCCL"
                }
            ]
        }
    ]

}